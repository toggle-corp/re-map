diff --git a/node_modules/@types/mapbox__mapbox-gl-draw/index.d.ts b/node_modules/@types/mapbox__mapbox-gl-draw/index.d.ts
index 82c47cb..cae557e 100644
--- a/node_modules/@types/mapbox__mapbox-gl-draw/index.d.ts
+++ b/node_modules/@types/mapbox__mapbox-gl-draw/index.d.ts
@@ -1,14 +1,15 @@
 import { BBox, Feature, FeatureCollection, GeoJSON, GeoJsonTypes, Geometry, Point, Position } from "geojson";
 import {
-    CircleLayer,
-    FillLayer,
+    CircleLayerSpecification,
+    FillLayerSpecification,
+    LineLayerSpecification,
     IControl,
-    LineLayer,
+    ControlPosition,
     Map,
-    MapboxEvent,
+    MapLibreEvent,
     MapMouseEvent as MapboxMapMouseEvent,
     MapTouchEvent as MapboxMapTouchEvent,
-} from "mapbox-gl";
+} from "maplibre-gl";
 
 export = MapboxDraw;
 export as namespace MapboxDraw;
@@ -178,7 +179,7 @@ declare namespace MapboxDraw {
     }
 
     interface DrawCustomModeThis {
-        map: mapboxgl.Map;
+        map: Map;
 
         drawConfig: MapboxDrawOptions;
 
@@ -389,13 +390,13 @@ declare namespace MapboxDraw {
             isOfMetaType: (
                 type: Constants["meta"][keyof Constants["meta"]],
             ) => (e: MapMouseEvent | MapTouchEvent) => boolean;
-            isShiftMousedown: (e: MapboxEvent) => boolean;
+            isShiftMousedown: (e: MapLibreEvent) => boolean;
             isActiveFeature: (e: MapMouseEvent | MapTouchEvent) => boolean;
             isInactiveFeature: (e: MapMouseEvent | MapTouchEvent) => boolean;
             noTarget: (e: MapMouseEvent | MapTouchEvent) => boolean;
             isFeature: (e: MapMouseEvent | MapTouchEvent) => boolean;
             isVertex: (e: MapMouseEvent | MapTouchEvent) => boolean;
-            isShiftDown: (e: MapboxEvent) => boolean;
+            isShiftDown: (e: MapLibreEvent) => boolean;
             isEscapeKey: (e: KeyboardEvent) => boolean;
             isEnterKey: (e: KeyboardEvent) => boolean;
             isTrue: () => boolean;
@@ -503,7 +504,7 @@ declare namespace MapboxDraw {
 
         StringSet(items?: Array<string | number>): StringSet;
 
-        theme: Array<(FillLayer | LineLayer | CircleLayer) & { id: ThemeLayerId }>;
+        theme: Array<(FillLayerSpecification | LineLayerSpecification | CircleLayerSpecification) & { id: ThemeLayerId }>;
 
         /**
          * Derive a dense array (no `undefined`s) from a single value or array.
@@ -552,7 +553,7 @@ declare class MapboxDraw implements IControl {
 
     modes: MapboxDraw.DrawModes;
 
-    getDefaultPosition: () => string;
+    getDefaultPosition: () => ControlPosition;
 
     constructor(options?: MapboxDraw.MapboxDrawOptions);
 
@@ -595,7 +596,7 @@ declare class MapboxDraw implements IControl {
 
     setFeatureProperty(featureId: string, property: string, value: any): this;
 
-    onAdd(map: mapboxgl.Map): HTMLElement;
+    onAdd(map: Map): HTMLElement;
 
-    onRemove(map: mapboxgl.Map): any;
+    onRemove(map: Map): any;
 }
